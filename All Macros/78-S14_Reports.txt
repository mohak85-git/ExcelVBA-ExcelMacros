Option Explicit
Dim myDate As Long
Dim myRegion As String
Dim ReplaceFile As VbMsgBoxResult
Dim Overwrite(1) As Boolean

Sub Create_Reports()
    Dim tbTemp As ListObject
    Dim RowsTb As Long, LastRow As Long
    
    Call Entry_Point
    Overwrite(0) = True
    Overwrite(1) = True
    On Error GoTo Handle
    'create an object variable for the table inside Region Temp tab
    Set tbTemp = shRegion.ListObjects("TableTemp")
    RowsTb = tbTemp.DataBodyRange.Rows.Count
    'Remove existing data in regional table except for line 1 if there is more than 1 line of data
    If RowsTb > 1 Then tbTemp.DataBodyRange.Rows("2:" & RowsTb).Delete
    LastRow = shAll.Range("A" & Rows.Count).End(xlUp).Row
    myRegion = shStart.AxRegion.Value
    myDate = Format(shAll.Range("C2").Value, "YYYYMM")
    
    ''''''''''''version 1
'    Dim Start
'    Start = Timer
'    Dim i As Long, r As Long, LastComp As Long
'    Dim c As Byte
''
''            Loop to find match for region
'            LastComp = shMap.Range("MCompany").Rows.Count
'            r = 2
'            For i = 2 To LastRow
'
'                For c = 1 To LastComp
'
'                    If shAll.Range("A" & i).Value = shMap.Range("Mcompany").Cells(c, 1).Value Then
'                        If UCase(myRegion) = UCase(shMap.Range("Mcompany").Cells(c, 4).Value) Then
'                            shAll.Range("A" & i, "H" & i).Copy shRegion.Range("A" & r, "H" & r)
'                            r = r + 1
'                        End If
'
'                    End If
'                Next c
'            Next i
            
     ''''''''''''version 2
    'find the region for each company for the summary tab
    shAll.Range("I2").FormulaR1C1 = "=VLOOKUP(RC[-8],MCompany,4,FALSE)"
    shAll.Range("I2").AutoFill Destination:=shAll.Range("I2:I" & LastRow)
    Application.Calculate

    With shAll.Range("A1:I" & LastRow)
        .AutoFilter Field:=9, Criteria1:=myRegion
        .Offset(1).Resize(.Rows.Count - 1, .Columns.Count - 1).SpecialCells(xlCellTypeVisible).Copy
    End With

    'paste the values
    shRegion.Range("A2").PasteSpecial
     shAll.Range("A1").AutoFilter
     shAll.Columns("I").Delete
'    Debug.Print Timer - Start
    shRegion.Range("U1").Value = myDate
    Application.Calculate
    shRegion.PivotTables("PTRegion").PivotCache.Refresh
    Call Region_Report
    Call Manager_Report
    If Overwrite(0) = False And Overwrite(1) = False Then
        MsgBox "No filese were created.", , "Operation Cancelled"
    Else
        MsgBox "File(s) created in the same directory as this workbook.", , "Well Done"

    End If
    Call Exit_Point
    Exit Sub
    
Handle:
            If Err.Number = 1004 Then
            MsgBox "It seems the data for this region has not been uploaded yet! Please upload and try again."
            shAll.Range("A1").AutoFilter
            shAll.Columns("I").Delete
            Exit Sub
        Else
            MsgBox "Looks like no data has been imported yet.", vbInformation
            Exit Sub
        End If
    Call Exit_Point
    
End Sub

Private Sub Region_Report()
    Dim NewRbook As Workbook
    Dim newRpath As String
    Dim PT As PivotTable
    newRpath = ThisWorkbook.Path & "\" & "RM_" & myDate & myRegion & ".xlsx"
    If Len(Dir(newRpath)) > 0 Then 'file exists
        ReplaceFile = MsgBox("Regional File Exists. Do you want to overwrite?", vbOKCancel, "Overwrite?")
        If ReplaceFile = vbCancel Then
            Overwrite(0) = False
            Exit Sub
        End If
    End If
    Set NewRbook = Workbooks.Add
    shRegion.Copy Before:=NewRbook.Sheets(1)
    'remove common filter for slicer
    NewRbook.SlicerCaches("Slicer_Company_Name").PivotTables.RemovePivotTable _
    (ActiveSheet.PivotTables("PTArticle"))
    'change pivot cache
    NewRbook.ActiveSheet.PivotTables("PTRegion").ChangePivotCache _
    NewRbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:="TableTemp")
        
    For Each PT In NewRbook.ActiveSheet.PivotTables
        If PT.Name <> "PTRegion" Then
            PT.ChangePivotCache ("PTRegion")
        End If
    Next PT
    
    'add back the common slicer
    NewRbook.SlicerCaches("Slicer_Company_Name").PivotTables.AddPivotTable _
    (ActiveSheet.PivotTables("PTArticle"))
    'some cleaning up
    With ActiveSheet
        .PivotTables("PTRegion").SaveData = True
        .Columns("AJ:AZ").Delete
        .Range("TableTemp").CurrentRegion.Columns.Group
        .Outline.ShowLevels RowLevels:=0, ColumnLevels:=1
        .Range("A1").CurrentRegion.Copy
        .Range("A1").PasteSpecial (xlPasteValues)

    End With
    
    NewRbook.SaveAs FileName:=newRpath
    NewRbook.Close
    TaskRow = shStart.Range("B" & shStart.Rows.Count).End(xlUp).Row + 1
    shStart.Range("B" & TaskRow).Value = "Regional Report for " & myRegion & myDate & " - created on: " & Now
    

End Sub
Private Sub Manager_Report()

    Dim newBook As Workbook
    Dim newPath As String
    
    newPath = ThisWorkbook.Path & "\" & "M_" & myDate & myRegion & ".xlsx"
    If Len(Dir(newPath)) > 0 Then 'file exists
        ReplaceFile = MsgBox("Manager File Exists. Do you want to overwrite?", vbOKCancel, "Overwrite?")
        If ReplaceFile = vbCancel Then
            Overwrite(1) = False
            Exit Sub
        End If
    End If
    Set newBook = Workbooks.Add
     ActiveWindow.DisplayGridlines = False
    
    shRegion.PivotTables("PTManager").TableRange1.Copy
       
    With newBook.Sheets(1).Range("A3")
        .PasteSpecial (xlPasteValues)
        .PasteSpecial (xlPasteFormats)
        .PasteSpecial (xlPasteColumnWidths)
    End With
           
    With newBook.Sheets(1).Range("A1:C1")
         Range("A1").Value = "Regional Overview"
        .Font.ColorIndex = 2
        .Font.Bold = True
        .Interior.ColorIndex = 55
    End With

   newBook.SaveAs FileName:=newPath
   newBook.Close
    TaskRow = shStart.Range("B" & shStart.Rows.Count).End(xlUp).Row + 1
    shStart.Range("B" & TaskRow).Value = "Manager Report for " & myRegion & myDate & " - created on: " & Now
End Sub

Sub Create_CSV()
    Dim FileName As String
    Dim FileNum As Integer
    Dim eRow As Range, eCell As Range, FullRange As Range
    Dim eLine As String
    
    Call Entry_Point
    With shAll.Range("A1").CurrentRegion
        Set FullRange = .Offset(1, 0).Resize(.Rows.Count - 1, .Columns.Count).Rows
    End With
    'Determine file path and name
    FileName = ThisWorkbook.Path & "\" & Format(shAll.Range("C2").Value, "YYYYMM") & ".csv"
    'get the next available file number to write to
    FileNum = FreeFile
    Open FileName For Output As FileNum
    For Each eRow In FullRange
        For Each eCell In eRow.Cells
            eLine = eLine & eCell.Value & ";"
        Next eCell
            eLine = Left(eLine, Len(eLine) - 1)
            Print #FileNum, eLine
            eLine = ""
    Next eRow
    Close FileNum
    Call Exit_Point
    MsgBox "CSV file has been saved in the same directory as this workook.", vbInformation, "CSV Saved"
    TaskRow = shStart.Range("B" & shStart.Rows.Count).End(xlUp).Row + 1
    shStart.Range("B" & TaskRow).Value = "CSV for month " & myDate & " - created on: " & Now
End Sub


